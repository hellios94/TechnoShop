@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@if (SignInManager.IsSignedIn(User))
{
    var currentUser = await UserManager.GetUserAsync(User);

    bool isAdmin = currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Administrator");
    bool isModerator = currentUser != null && await UserManager.IsInRoleAsync(currentUser, "Moderator");
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="nav navbar-nav">
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <a asp-area="" asp-controller="Orders" asp-action="Index" class="nav-link fa fa-shopping-cart"></a>
            </li>
            @if (isAdmin)
            {
                <li class="nav-item">
                    <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="nav-link">Admin</a>
                </li>
            }
            @if (isModerator)
            {
                <li class="nav-item">
                    <a asp-area="Moderator" asp-controller="Home" asp-action="Index" class="nav-link">Moderator</a>
                </li>
            }
            <li class="nav-item">
                <a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage" class="nav-link">Hello @UserManager.GetUserName(User)!</a>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn nav-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Register" class="nav-link">Register</a></li>
        <li class="nav-item"><a asp-area="Identity" asp-page="/Account/Login" class="nav-link">Login</a></li>
    </ul>
}